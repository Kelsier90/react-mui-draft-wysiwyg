{"version":3,"sources":["webpack:///../docs/examples/save-content.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","MUIEditor","MUIEditorState","convertToRaw","Playground","editorConfig","React","createEmpty","editorState","setEditorState","onChange","newState","config","onClick","rawContent","getCurrentContent","console","log","alert","type","isMDXComponent"],"mappings":"8RASaA,G,UAAe,S,gNAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,8BACE,iBAAGC,WAAW,cAAd,+EAEF,iBAAQ,CACN,GAAM,WADR,WAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,uHAKL,sCAAqB,0BAAYA,WAAW,KAAvB,gBAArB,KACA,qBAAG,6BAAGA,WAAW,KAAQ,CACrB,KAAQ,yEADT,yEAGH,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,0qBAA6qBC,SAAO,GACrtBL,QACAH,kBACAS,cACAC,mBACAC,4BACAC,gBANqtB,gBAOrtBZ,IAPqtB,EAQrtBH,eARqtB,GASptBO,QAAQ,eACZ,WACK,IAAMS,EAAe,GADpB,EAEqCC,WAAeJ,IAAeK,YAAYF,IAAzEG,EAFN,KAEmBC,EAFnB,KAeD,OAAO,4BACP,YAAC,IAAD,CAAWD,YAAaA,EAAaE,SAZpB,SAAAC,GACfF,EAAeE,IAWwCC,OAAQP,EAAcT,QAAQ,cACvF,sBAAQiB,QATK,WACX,IAAMC,EAAaX,uBAAaK,EAAYO,qBAE5CC,QAAQC,IAAIH,GACZI,MAAM,UAKeC,KAAK,UAA5B,kB,8MAQR1B,EAAW2B,gBAAiB","file":"component---docs-examples-save-content-mdx-6c3288a698dedb467a0f.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"D:/Documents/React Projects/components/react-mui-draft-wysiwyg/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport MUIEditor, { MUIEditorState } from \"../../src\";\nimport { convertToRaw } from 'draft-js';\nimport { Playground } from \"docz\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <blockquote>\n      <p parentName=\"blockquote\">{`This example shows how to save the editor content for example to a server.`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"imports\"\n    }}>{`Imports`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`import MUIEditor, { MUIEditorState } from \"react-mui-draft-wysiwyg\";\nimport { convertToRaw } from 'draft-js';\n`}</code></pre>\n    <p>{`More info for `}<inlineCode parentName=\"p\">{`convertToRaw`}</inlineCode>{`:`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://draftjs.org/docs/api-reference-data-conversion/#converttoraw\"\n      }}>{`https://draftjs.org/docs/api-reference-data-conversion/#converttoraw`}</a></p>\n    <h2 {...{\n      \"id\": \"playground\"\n    }}>{`Playground`}</h2>\n    <Playground __position={0} __code={'() => {\\n  const editorConfig = {}\\n  const [editorState, setEditorState] = React.useState(\\n    MUIEditorState.createEmpty(editorConfig),\\n  )\\n  const onChange = newState => {\\n    setEditorState(newState)\\n  }\\n  const save = () => {\\n    const rawContent = convertToRaw(editorState.getCurrentContent())\\n    // Here you can send the rawContent object to a server or whatever you want\\n    console.log(rawContent)\\n    alert(\\'Saved\\')\\n  }\\n  return (\\n    <>\\n      <MUIEditor\\n        editorState={editorState}\\n        onChange={onChange}\\n        config={editorConfig}\\n      />\\n      <button onClick={save} type=\\\"button\\\">\\n        Save\\n      </button>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      MUIEditor,\n      MUIEditorState,\n      convertToRaw,\n      Playground,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const editorConfig = {};\n        const [editorState, setEditorState] = React.useState(MUIEditorState.createEmpty(editorConfig));\n\n        const onChange = newState => {\n          setEditorState(newState);\n        };\n\n        const save = () => {\n          const rawContent = convertToRaw(editorState.getCurrentContent()); // Here you can send the rawContent object to a server or whatever you want\n\n          console.log(rawContent);\n          alert('Saved');\n        };\n\n        return <>\n        <MUIEditor editorState={editorState} onChange={onChange} config={editorConfig} mdxType=\"MUIEditor\" />\n        <button onClick={save} type=\"button\">Save</button>\n      </>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}