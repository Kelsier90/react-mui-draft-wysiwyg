{"version":3,"sources":["webpack:///../docs/data-conversion/html.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","MUIEditor","MUIEditorState","toHTML","editorConfig","React","createEmpty","editorState","setEditorState","html","setHtml","onChange","newState","config","onClick","stateHtml","getCurrentContent","isMDXComponent"],"mappings":"gRAQaA,G,UAAe,S,+MAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,QADR,QAGA,oEAAmD,kBAAIC,WAAW,KAAf,QAAnD,KACA,iBAAQ,CACN,GAAM,UADR,UAGA,+CAA8B,0BAAYA,WAAW,KAAvB,UAA9B,+DAAgJ,kBAAIA,WAAW,KAAf,QAAhJ,KACA,gDACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,mnBAAsnBC,SAAO,GAC9pBL,QACAH,kBACAS,eACAC,cACAC,mBACAC,YAN8pB,gBAO9pBZ,IAP8pB,EAQ9pBH,eAR8pB,GAS7pBO,QAAQ,eACZ,WACK,IAAMS,EAAe,GADpB,EAEqCC,WAAeH,IAAeI,YAAYF,IAAzEG,EAFN,KAEmBC,EAFnB,OAGuBH,WAAe,IAAhCI,EAHN,KAGYC,EAHZ,KAcD,OAAO,4BACP,YAAC,IAAD,CAAWH,YAAaA,EAAaI,SAVpB,SAAAC,GACfJ,EAAeI,IASwCC,OAAQT,EAAcT,QAAQ,cACvF,sBAAQmB,QAPc,WACpB,IAAMC,EAAYZ,YAAOI,EAAYS,qBACrCN,EAAQK,KAKV,WACA,uBAAMN,a,6MAQdjB,EAAWyB,gBAAiB","file":"component---docs-data-conversion-html-mdx-58bfba35e45ac39a58be.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"D:/Documents/React Projects/components/react-mui-draft-wysiwyg/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from \"docz\";\nimport MUIEditor, { MUIEditorState, toHTML } from \"../../src\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"html\"\n    }}>{`HTML`}</h1>\n    <p>{`You can convert the editor state content to `}<em parentName=\"p\">{`HTML`}</em>{`.`}</p>\n    <h2 {...{\n      \"id\": \"tohtml\"\n    }}>{`toHTML`}</h2>\n    <p>{`Its possible thanks to `}<inlineCode parentName=\"p\">{`toHTML`}</inlineCode>{` function, that converts the content of the editor state to `}<em parentName=\"p\">{`HTML`}</em>{`.`}</p>\n    <p>{`Let's see how to do it.`}</p>\n    <Playground __position={0} __code={'() => {\\n  const editorConfig = {}\\n  const [editorState, setEditorState] = React.useState(\\n    MUIEditorState.createEmpty(editorConfig),\\n  )\\n  const [html, setHtml] = React.useState(\\'\\')\\n  const onChange = newState => {\\n    setEditorState(newState)\\n  }\\n  const convertToHTML = () => {\\n    const stateHtml = toHTML(editorState.getCurrentContent())\\n    setHtml(stateHtml)\\n  }\\n  return (\\n    <>\\n      <MUIEditor\\n        editorState={editorState}\\n        onChange={onChange}\\n        config={editorConfig}\\n      />\\n      <button onClick={convertToHTML}>To HTML</button>\\n      <div>{html}</div>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      MUIEditor,\n      MUIEditorState,\n      toHTML,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const editorConfig = {};\n        const [editorState, setEditorState] = React.useState(MUIEditorState.createEmpty(editorConfig));\n        const [html, setHtml] = React.useState('');\n\n        const onChange = newState => {\n          setEditorState(newState);\n        };\n\n        const convertToHTML = () => {\n          const stateHtml = toHTML(editorState.getCurrentContent());\n          setHtml(stateHtml);\n        };\n\n        return <>\n        <MUIEditor editorState={editorState} onChange={onChange} config={editorConfig} mdxType=\"MUIEditor\" />\n        <button onClick={convertToHTML}>To HTML</button>\n        <div>{html}</div>\n      </>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}