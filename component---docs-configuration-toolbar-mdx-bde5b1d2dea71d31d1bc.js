(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{PDCl:function(t,e,o){"use strict";o.r(e),o.d(e,"_frontmatter",(function(){return s})),o.d(e,"default",(function(){return p}));var n=o("Fcif"),a=o("+I+c"),r=o("mXGw"),l=o("/FXl"),c=o("TjRS"),i=o("ZFoC"),b=o("RHcy"),s=(o("aD51"),{});void 0!==s&&s&&s===Object(s)&&Object.isExtensible(s)&&!s.hasOwnProperty("__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docs/configuration/toolbar.mdx"}});var d={_frontmatter:s},u=c.a;function p(t){var e,o,p,g,f,h,j,m,O,y,C,S,E=t.components,x=Object(a.a)(t,["components"]);return Object(l.b)(u,Object(n.a)({},d,x,{components:E,mdxType:"MDXLayout"}),Object(l.b)("h1",{id:"toolbar"},"toolbar"),Object(l.b)("p",null,"Toolbar settings."),Object(l.b)("h2",{id:"toolbarclassname"},"toolbar.className"),Object(l.b)("p",null,"The toolbar wrapper className prop."),Object(l.b)("h2",{id:"toolbarstyle"},"toolbar.style"),Object(l.b)("p",null,"The toolbar wrapper style prop."),Object(l.b)(i.c,{__position:0,__code:"() => {\n  const config = {\n    toolbar: {\n      style: {\n        padding: 25,\n        background: '#50c1ae',\n      },\n    },\n  }\n  const [editorState, setEditorState] = React.useState(\n    MUIEditorState.createEmpty(config),\n  )\n  const onChange = newState => {\n    setEditorState(newState)\n  }\n  return (\n    <MUIEditor\n      editorState={editorState}\n      onChange={onChange}\n      config={config}\n    />\n  )\n}",__scope:(e={props:x,DefaultLayout:c.a,Playground:i.c,MUIEditor:b.d,MUIEditorState:b.c,toolbarControlTypes:b.f,LANG_PREFIX:b.b},e.DefaultLayout=c.a,e._frontmatter=s,e),mdxType:"Playground"},(function(){var t={toolbar:{style:{padding:25,background:"#50c1ae"}}},e=r.useState(b.c.createEmpty(t)),o=e[0],n=e[1];return Object(l.b)(b.d,{editorState:o,onChange:function(t){n(t)},config:t,mdxType:"MUIEditor"})})),Object(l.b)("p",null,"You can edit the code above and try other styles."),Object(l.b)("h2",{id:"toolbarvisible"},"toolbar.visible"),Object(l.b)("p",null,"Sets whether the toolbar is visible. It's ",Object(l.b)("inlineCode",{parentName:"p"},"true")," by default."),Object(l.b)(i.c,{__position:1,__code:"() => {\n  const config = {\n    toolbar: {\n      visible: false,\n    },\n  }\n  const [editorState, setEditorState] = React.useState(\n    MUIEditorState.createEmpty(config),\n  )\n  const onChange = newState => {\n    setEditorState(newState)\n  }\n  return (\n    <MUIEditor\n      editorState={editorState}\n      onChange={onChange}\n      config={config}\n    />\n  )\n}",__scope:(o={props:x,DefaultLayout:c.a,Playground:i.c,MUIEditor:b.d,MUIEditorState:b.c,toolbarControlTypes:b.f,LANG_PREFIX:b.b},o.DefaultLayout=c.a,o._frontmatter=s,o),mdxType:"Playground"},(function(){var t={toolbar:{visible:!1}},e=r.useState(b.c.createEmpty(t)),o=e[0],n=e[1];return Object(l.b)(b.d,{editorState:o,onChange:function(t){n(t)},config:t,mdxType:"MUIEditor"})})),Object(l.b)("p",null,"You can edit the code above and change the toolbar visibility."),Object(l.b)("h2",{id:"toolbarposition"},"toolbar.position"),Object(l.b)("p",null,"Sets the toolbar position: Top or bottom."),Object(l.b)("p",null,"Possible values: ",Object(l.b)("inlineCode",{parentName:"p"},"'top'")," or ",Object(l.b)("inlineCode",{parentName:"p"},"'bottom'"),". The default value is ",Object(l.b)("inlineCode",{parentName:"p"},"'top'"),"."),Object(l.b)(i.c,{__position:2,__code:"() => {\n  const config = {\n    toolbar: {\n      position: 'bottom',\n    },\n  }\n  const [editorState, setEditorState] = React.useState(\n    MUIEditorState.createEmpty(config),\n  )\n  const onChange = newState => {\n    setEditorState(newState)\n  }\n  return (\n    <MUIEditor\n      editorState={editorState}\n      onChange={onChange}\n      config={config}\n    />\n  )\n}",__scope:(p={props:x,DefaultLayout:c.a,Playground:i.c,MUIEditor:b.d,MUIEditorState:b.c,toolbarControlTypes:b.f,LANG_PREFIX:b.b},p.DefaultLayout=c.a,p._frontmatter=s,p),mdxType:"Playground"},(function(){var t={toolbar:{position:"bottom"}},e=r.useState(b.c.createEmpty(t)),o=e[0],n=e[1];return Object(l.b)(b.d,{editorState:o,onChange:function(t){n(t)},config:t,mdxType:"MUIEditor"})})),Object(l.b)("p",null,"You can edit the code above and change the toolbar position."),Object(l.b)("h2",{id:"toolbarcontrols"},"toolbar.controls"),Object(l.b)("p",null,"Array that sets the toolbar controls. You can see the default controls on ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/react-mui-draft-wysiwyg/configuration/default-configuration"}),"Default configuration section"),"."),Object(l.b)("p",null,"In order to add the built-in controls you have to import them:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"import { toolbarControlTypes } from 'react-mui-draft-wysiwyg';\n")),Object(l.b)("p",null,"And pass them to ",Object(l.b)("inlineCode",{parentName:"p"},"toolbar.controls")," option like this:"),Object(l.b)(i.c,{__position:3,__code:"() => {\n  const config = {\n    toolbar: {\n      controls: [\n        toolbarControlTypes.bold,\n        toolbarControlTypes.italic,\n        toolbarControlTypes.underline,\n      ],\n    },\n  }\n  const [editorState, setEditorState] = React.useState(\n    MUIEditorState.createEmpty(config),\n  )\n  const onChange = newState => {\n    setEditorState(newState)\n  }\n  return (\n    <MUIEditor\n      editorState={editorState}\n      onChange={onChange}\n      config={config}\n    />\n  )\n}",__scope:(g={props:x,DefaultLayout:c.a,Playground:i.c,MUIEditor:b.d,MUIEditorState:b.c,toolbarControlTypes:b.f,LANG_PREFIX:b.b},g.DefaultLayout=c.a,g._frontmatter=s,g),mdxType:"Playground"},(function(){var t={toolbar:{controls:[b.f.bold,b.f.italic,b.f.underline]}},e=r.useState(b.c.createEmpty(t)),o=e[0],n=e[1];return Object(l.b)(b.d,{editorState:o,onChange:function(t){n(t)},config:t,mdxType:"MUIEditor"})})),Object(l.b)("p",null,"Let's see all the available controls."),Object(l.b)("h3",{id:"undo"},"undo"),Object(l.b)("p",null,"This control allows the user undo the last change."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"toolbarControlTypes.undo\n")),Object(l.b)("h3",{id:"redo"},"redo"),Object(l.b)("p",null,"This control allows the user redo the last change."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"toolbarControlTypes.redo\n")),Object(l.b)("h3",{id:"bold"},"bold"),Object(l.b)("p",null,"This control allows the user toggle bold style of the current selected text."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"toolbarControlTypes.bold\n")),Object(l.b)("h3",{id:"italic"},"italic"),Object(l.b)("p",null,"This control allows the user toggle italic style of the current selected text."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"toolbarControlTypes.italic\n")),Object(l.b)("h3",{id:"underline"},"underline"),Object(l.b)("p",null,"This control allows the user toggle underline of the current selected text."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"toolbarControlTypes.underline\n")),Object(l.b)("h3",{id:"strikethrough"},"strikethrough"),Object(l.b)("p",null,"This control allows the user toggle strikethrough style of the current selected text."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"toolbarControlTypes.strikethrough\n")),Object(l.b)("h3",{id:"fontcolor"},"fontColor"),Object(l.b)("p",null,"This control allows the user change the font color of the current selected text."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"toolbarControlTypes.fontColor\n")),Object(l.b)("h3",{id:"fontbackgroundcolor"},"fontBackgroundColor"),Object(l.b)("p",null,"This control allows the user change the font background color of the current selected text."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"toolbarControlTypes.fontBackgroundColor\n")),Object(l.b)("h3",{id:"linkadd"},"linkAdd"),Object(l.b)("p",null,"This control allows the user add a link (URL) to the current selected text."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"toolbarControlTypes.linkAdd\n")),Object(l.b)("h3",{id:"linkremove"},"linkRemove"),Object(l.b)("p",null,"This control allows the user remove all links of the current selected text."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"toolbarControlTypes.fontColor\n")),Object(l.b)("h3",{id:"image"},"image"),Object(l.b)("p",null,"This control allows the user add an image by uploading it or adding its URL."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"toolbarControlTypes.image\n")),Object(l.b)("h3",{id:"blocktype"},"blockType"),Object(l.b)("p",null,"This control allows the user change the paragraph style (Header 1, Header 2, etc.)."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"toolbarControlTypes.blockType\n")),Object(l.b)("h3",{id:"fontsize"},"fontSize"),Object(l.b)("p",null,"This control allows the user change the font size of the selected text."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"toolbarControlTypes.fontSize\n")),Object(l.b)("h3",{id:"fontfamily"},"fontFamily"),Object(l.b)("p",null,"This control allows the user change the font family (Arial, Sans Serif, etc) of the selected text."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"toolbarControlTypes.fontFamily\n")),Object(l.b)("h3",{id:"textalign"},"textAlign"),Object(l.b)("p",null,"This control allows the user change text alignment (left, center, right and justify) of the selected paragraphs."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"toolbarControlTypes.textAlign\n")),Object(l.b)("h3",{id:"unorderedlist"},"unorderedList"),Object(l.b)("p",null,"This control allows the user start an unordered list of items."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"toolbarControlTypes.unorderedList\n")),Object(l.b)("h3",{id:"orderedlist"},"orderedList"),Object(l.b)("p",null,"This control allows the user start an ordered list of items."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"toolbarControlTypes.orderedList\n")),Object(l.b)("h3",{id:"divider"},"divider"),Object(l.b)("p",null,"This control is purely cosmetic. Add a vertical line that allows you to separate the rest of the controls."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"toolbarControlTypes.divider\n")),Object(l.b)("h2",{id:"toolbarcontrolsconfig"},"toolbar.controlsConfig"),Object(l.b)("p",null,"This setting allow to customize some toolbar controls."),Object(l.b)("h3",{id:"toolbarcontrolsconfigblocktype"},"toolbar.controlsConfig.blockType"),Object(l.b)("h4",{id:"toolbarcontrolsconfigblocktypeoptions"},"toolbar.controlsConfig.blockType.options"),Object(l.b)("p",null,"This allows you to set the available options."),Object(l.b)(i.c,{__position:4,__code:"() => {\n  const config = {\n    toolbar: {\n      controlsConfig: {\n        blockType: {\n          options: [\n            {\n              value: 'default',\n              text: LANG_PREFIX + 'controls.blockType.labels.normal',\n            },\n            {\n              value: 'header-one',\n              text: LANG_PREFIX + 'controls.blockType.labels.header1',\n            },\n            {\n              value: 'header-two',\n              text: LANG_PREFIX + 'controls.blockType.labels.header2',\n            },\n            {\n              value: 'header-three',\n              text: LANG_PREFIX + 'controls.blockType.labels.header3',\n            },\n            {\n              value: 'blockquote',\n              text: 'Quote',\n            },\n          ],\n        },\n      },\n    },\n  }\n  const [editorState, setEditorState] = React.useState(\n    MUIEditorState.createEmpty(config),\n  )\n  const onChange = newState => {\n    setEditorState(newState)\n  }\n  return (\n    <MUIEditor\n      editorState={editorState}\n      onChange={onChange}\n      config={config}\n    />\n  )\n}",__scope:(f={props:x,DefaultLayout:c.a,Playground:i.c,MUIEditor:b.d,MUIEditorState:b.c,toolbarControlTypes:b.f,LANG_PREFIX:b.b},f.DefaultLayout=c.a,f._frontmatter=s,f),mdxType:"Playground"},(function(){var t={toolbar:{controlsConfig:{blockType:{options:[{value:"default",text:b.b+"controls.blockType.labels.normal"},{value:"header-one",text:b.b+"controls.blockType.labels.header1"},{value:"header-two",text:b.b+"controls.blockType.labels.header2"},{value:"header-three",text:b.b+"controls.blockType.labels.header3"},{value:"blockquote",text:"Quote"}]}}}},e=r.useState(b.c.createEmpty(t)),o=e[0],n=e[1];return Object(l.b)(b.d,{editorState:o,onChange:function(t){n(t)},config:t,mdxType:"MUIEditor"})})),Object(l.b)("p",null,"You can edit the code above and try other options."),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"value")," property contains the draft block style. Built-in block styles: ",Object(l.b)("inlineCode",{parentName:"p"},"'default'"),", ",Object(l.b)("inlineCode",{parentName:"p"},"'header-one'"),", ",Object(l.b)("inlineCode",{parentName:"p"},"'header-two'"),", ",Object(l.b)("inlineCode",{parentName:"p"},"'header-three'"),", ",Object(l.b)("inlineCode",{parentName:"p"},"'header-four'"),", ",Object(l.b)("inlineCode",{parentName:"p"},"'header-five'"),", ",Object(l.b)("inlineCode",{parentName:"p"},"'header-six'")," and ",Object(l.b)("inlineCode",{parentName:"p"},"'blockquote'")),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"text")," property contains the text that the user sees."),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"LANG_PREFIX")," constant in the example above tells to the editor to translate the text. For more information about translations go to: ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/react-mui-draft-wysiwyg/configuration/lang"}),"lang section")),Object(l.b)("h3",{id:"toolbarcontrolsconfigimage"},"toolbar.controlsConfig.image"),Object(l.b)("h4",{id:"toolbarcontrolsconfigimageuploadcallback"},"toolbar.controlsConfig.image.uploadCallback"),Object(l.b)("p",null,"Function containing the logic when an image is uploaded.  Receives image ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/File"}),Object(l.b)("inlineCode",{parentName:"a"},"File"))," object as parameter. It must return a ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise"}),Object(l.b)("inlineCode",{parentName:"a"},"Promise"))," with the URL as ",Object(l.b)("inlineCode",{parentName:"p"},"string"),"."),Object(l.b)("p",null,"By default the image is converted to base64.\nUse this option if you want upload to a server or doing something with it before is added to the editor."),Object(l.b)(i.c,{__position:5,__code:"() => {\n  const config = {\n    toolbar: {\n      controlsConfig: {\n        image: {\n          uploadCallback: file =>\n            new Promise(function(resolve, reject) {\n              if (file.size > 1000000) {\n                reject('The image is too big! Max size: 1mb')\n              }\n              // Here you can upload the image to a server for example,\n              // grab the URL and return it with the resolve function\n              resolve('https://picsum.photos/200/300')\n            }),\n        },\n      },\n    },\n  }\n  const [editorState, setEditorState] = React.useState(\n    MUIEditorState.createEmpty(config),\n  )\n  const onChange = newState => {\n    setEditorState(newState)\n  }\n  return (\n    <MUIEditor\n      editorState={editorState}\n      onChange={onChange}\n      config={config}\n    />\n  )\n}",__scope:(h={props:x,DefaultLayout:c.a,Playground:i.c,MUIEditor:b.d,MUIEditorState:b.c,toolbarControlTypes:b.f,LANG_PREFIX:b.b},h.DefaultLayout=c.a,h._frontmatter=s,h),mdxType:"Playground"},(function(){var t={toolbar:{controlsConfig:{image:{uploadCallback:function(t){return new Promise((function(e,o){t.size>1e6&&o("The image is too big! Max size: 1mb"),e("https://picsum.photos/200/300")}))}}}}},e=r.useState(b.c.createEmpty(t)),o=e[0],n=e[1];return Object(l.b)(b.d,{editorState:o,onChange:function(t){n(t)},config:t,mdxType:"MUIEditor"})})),Object(l.b)("p",null,"You can edit the code above and try other logic."),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Note"),": This is only is applicable on the upload image option, it doesn't work on the URL option."),Object(l.b)("h3",{id:"toolbarcontrolsconfigfontcolor"},"toolbar.controlsConfig.fontColor"),Object(l.b)("h4",{id:"toolbarcontrolsconfigfontcolorcolorsperrow"},"toolbar.controlsConfig.fontColor.colorsPerRow"),Object(l.b)("p",null,"This is the maximum number of color options that will be shown in a single row. By default ",Object(l.b)("inlineCode",{parentName:"p"},"10"),"."),Object(l.b)(i.c,{__position:6,__code:"() => {\n  const config = {\n    toolbar: {\n      controlsConfig: {\n        fontColor: {\n          colorsPerRow: 30,\n        },\n      },\n    },\n  }\n  const [editorState, setEditorState] = React.useState(\n    MUIEditorState.createEmpty(config),\n  )\n  const onChange = newState => {\n    setEditorState(newState)\n  }\n  return (\n    <MUIEditor\n      editorState={editorState}\n      onChange={onChange}\n      config={config}\n    />\n  )\n}",__scope:(j={props:x,DefaultLayout:c.a,Playground:i.c,MUIEditor:b.d,MUIEditorState:b.c,toolbarControlTypes:b.f,LANG_PREFIX:b.b},j.DefaultLayout=c.a,j._frontmatter=s,j),mdxType:"Playground"},(function(){var t={toolbar:{controlsConfig:{fontColor:{colorsPerRow:30}}}},e=r.useState(b.c.createEmpty(t)),o=e[0],n=e[1];return Object(l.b)(b.d,{editorState:o,onChange:function(t){n(t)},config:t,mdxType:"MUIEditor"})})),Object(l.b)("p",null,"You can edit the code above and try other number."),Object(l.b)("h4",{id:"toolbarcontrolsconfigfontcoloroptions"},"toolbar.controlsConfig.fontColor.options"),Object(l.b)("p",null,"This is and array with the available color list. In order to see the default value go to: ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/react-mui-draft-wysiwyg/configuration/default-configuration"}),"Default configuration section"),"."),Object(l.b)(i.c,{__position:7,__code:"() => {\n  const config = {\n    toolbar: {\n      controlsConfig: {\n        fontColor: {\n          options: [\n            { text: 'black', value: 'rgb(0, 0, 0)' },\n            { text: 'white', value: 'rgb(255, 255, 255)' },\n            { text: 'red', value: 'rgb(255, 0, 0)' },\n            { text: 'green', value: 'rgb(0, 255, 0)' },\n            { text: 'blue', value: 'rgb(0, 0, 255)' },\n          ],\n        },\n      },\n    },\n  }\n  const [editorState, setEditorState] = React.useState(\n    MUIEditorState.createEmpty(config),\n  )\n  const onChange = newState => {\n    setEditorState(newState)\n  }\n  return (\n    <MUIEditor\n      editorState={editorState}\n      onChange={onChange}\n      config={config}\n    />\n  )\n}",__scope:(m={props:x,DefaultLayout:c.a,Playground:i.c,MUIEditor:b.d,MUIEditorState:b.c,toolbarControlTypes:b.f,LANG_PREFIX:b.b},m.DefaultLayout=c.a,m._frontmatter=s,m),mdxType:"Playground"},(function(){var t={toolbar:{controlsConfig:{fontColor:{options:[{text:"black",value:"rgb(0, 0, 0)"},{text:"white",value:"rgb(255, 255, 255)"},{text:"red",value:"rgb(255, 0, 0)"},{text:"green",value:"rgb(0, 255, 0)"},{text:"blue",value:"rgb(0, 0, 255)"}]}}}},e=r.useState(b.c.createEmpty(t)),o=e[0],n=e[1];return Object(l.b)(b.d,{editorState:o,onChange:function(t){n(t)},config:t,mdxType:"MUIEditor"})})),Object(l.b)("p",null,"You can edit the code above and try other colors."),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"text")," property contains the text shown in tooltip when the user moves the mouse over the color.\nThe ",Object(l.b)("inlineCode",{parentName:"p"},"value")," property contains the value of the color in rgb, hex or string (",Object(l.b)("inlineCode",{parentName:"p"},"black"),", ",Object(l.b)("inlineCode",{parentName:"p"},"'red'"),", etc.)."),Object(l.b)("h3",{id:"toolbarcontrolsconfigfontbackgroundcolor"},"toolbar.controlsConfig.fontBackgroundColor"),Object(l.b)("h4",{id:"toolbarcontrolsconfigfontbackgroundcolorcolorsperrow"},"toolbar.controlsConfig.fontBackgroundColor.colorsPerRow"),Object(l.b)("p",null,"This is the maximum number of color options that will be shown in a single row. By default ",Object(l.b)("inlineCode",{parentName:"p"},"10"),"."),Object(l.b)(i.c,{__position:8,__code:"() => {\n  const config = {\n    toolbar: {\n      controlsConfig: {\n        fontBackgroundColor: {\n          colorsPerRow: 30,\n        },\n      },\n    },\n  }\n  const [editorState, setEditorState] = React.useState(\n    MUIEditorState.createEmpty(config),\n  )\n  const onChange = newState => {\n    setEditorState(newState)\n  }\n  return (\n    <MUIEditor\n      editorState={editorState}\n      onChange={onChange}\n      config={config}\n    />\n  )\n}",__scope:(O={props:x,DefaultLayout:c.a,Playground:i.c,MUIEditor:b.d,MUIEditorState:b.c,toolbarControlTypes:b.f,LANG_PREFIX:b.b},O.DefaultLayout=c.a,O._frontmatter=s,O),mdxType:"Playground"},(function(){var t={toolbar:{controlsConfig:{fontBackgroundColor:{colorsPerRow:30}}}},e=r.useState(b.c.createEmpty(t)),o=e[0],n=e[1];return Object(l.b)(b.d,{editorState:o,onChange:function(t){n(t)},config:t,mdxType:"MUIEditor"})})),Object(l.b)("p",null,"You can edit the code above and try other number."),Object(l.b)("h4",{id:"toolbarcontrolsconfigfontbackgroundcoloroptions"},"toolbar.controlsConfig.fontBackgroundColor.options"),Object(l.b)("p",null,"This is and array with the available color list. In order to see the default value go to: ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/react-mui-draft-wysiwyg/configuration/default-configuration"}),"Default configuration section"),"."),Object(l.b)(i.c,{__position:9,__code:"() => {\n  const config = {\n    toolbar: {\n      controlsConfig: {\n        fontBackgroundColor: {\n          options: [\n            { text: 'black', value: 'rgb(0, 0, 0)' },\n            { text: 'white', value: 'rgb(255, 255, 255)' },\n            { text: 'red', value: 'rgb(255, 0, 0)' },\n            { text: 'green', value: 'rgb(0, 255, 0)' },\n            { text: 'blue', value: 'rgb(0, 0, 255)' },\n          ],\n        },\n      },\n    },\n  }\n  const [editorState, setEditorState] = React.useState(\n    MUIEditorState.createEmpty(config),\n  )\n  const onChange = newState => {\n    setEditorState(newState)\n  }\n  return (\n    <MUIEditor\n      editorState={editorState}\n      onChange={onChange}\n      config={config}\n    />\n  )\n}",__scope:(y={props:x,DefaultLayout:c.a,Playground:i.c,MUIEditor:b.d,MUIEditorState:b.c,toolbarControlTypes:b.f,LANG_PREFIX:b.b},y.DefaultLayout=c.a,y._frontmatter=s,y),mdxType:"Playground"},(function(){var t={toolbar:{controlsConfig:{fontBackgroundColor:{options:[{text:"black",value:"rgb(0, 0, 0)"},{text:"white",value:"rgb(255, 255, 255)"},{text:"red",value:"rgb(255, 0, 0)"},{text:"green",value:"rgb(0, 255, 0)"},{text:"blue",value:"rgb(0, 0, 255)"}]}}}},e=r.useState(b.c.createEmpty(t)),o=e[0],n=e[1];return Object(l.b)(b.d,{editorState:o,onChange:function(t){n(t)},config:t,mdxType:"MUIEditor"})})),Object(l.b)("p",null,"You can edit the code above and try other colors."),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"text")," property contains the text shown in tooltip when the user moves the mouse over the color.\nThe ",Object(l.b)("inlineCode",{parentName:"p"},"value")," property contains the value of the color in rgb, hex or string (",Object(l.b)("inlineCode",{parentName:"p"},"black"),", ",Object(l.b)("inlineCode",{parentName:"p"},"'red'"),", etc.)."),Object(l.b)("h3",{id:"toolbarcontrolsconfigfontsize"},"toolbar.controlsConfig.fontSize"),Object(l.b)("h4",{id:"toolbarcontrolsconfigfontsizeoptions"},"toolbar.controlsConfig.fontSize.options"),Object(l.b)("p",null,"This is an array with the available sizes. In order to see the default value go to: ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/react-mui-draft-wysiwyg/configuration/default-configuration"}),"Default configuration section"),"."),Object(l.b)(i.c,{__position:10,__code:"() => {\n  const config = {\n    toolbar: {\n      controlsConfig: {\n        fontSize: {\n          options: [\n            'default',\n            '4px',\n            '8px',\n            '12px',\n            '24px',\n            '36px',\n            '60px',\n            '72px',\n            '96px',\n          ],\n        },\n      },\n    },\n  }\n  const [editorState, setEditorState] = React.useState(\n    MUIEditorState.createEmpty(config),\n  )\n  const onChange = newState => {\n    setEditorState(newState)\n  }\n  return (\n    <MUIEditor\n      editorState={editorState}\n      onChange={onChange}\n      config={config}\n    />\n  )\n}",__scope:(C={props:x,DefaultLayout:c.a,Playground:i.c,MUIEditor:b.d,MUIEditorState:b.c,toolbarControlTypes:b.f,LANG_PREFIX:b.b},C.DefaultLayout=c.a,C._frontmatter=s,C),mdxType:"Playground"},(function(){var t={toolbar:{controlsConfig:{fontSize:{options:["default","4px","8px","12px","24px","36px","60px","72px","96px"]}}}},e=r.useState(b.c.createEmpty(t)),o=e[0],n=e[1];return Object(l.b)(b.d,{editorState:o,onChange:function(t){n(t)},config:t,mdxType:"MUIEditor"})})),Object(l.b)("p",null,"You can edit the code above and try other font sizes."),Object(l.b)("h3",{id:"toolbarcontrolsconfigfontfamily"},"toolbar.controlsConfig.fontFamily"),Object(l.b)("h4",{id:"toolbarcontrolsconfigfontfamilyoptions"},"toolbar.controlsConfig.fontFamily.options"),Object(l.b)("p",null,"This is an array with the available font families. In order to see the default value go to: ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/react-mui-draft-wysiwyg/configuration/default-configuration"}),"Default configuration section"),"."),Object(l.b)(i.c,{__position:11,__code:"() => {\n  const config = {\n    toolbar: {\n      controlsConfig: {\n        fontFamily: {\n          options: [\n            'default',\n            'Arial',\n            'Tahoma',\n            'Times New Roman',\n            'Impact',\n          ],\n        },\n      },\n    },\n  }\n  const [editorState, setEditorState] = React.useState(\n    MUIEditorState.createEmpty(config),\n  )\n  const onChange = newState => {\n    setEditorState(newState)\n  }\n  return (\n    <MUIEditor\n      editorState={editorState}\n      onChange={onChange}\n      config={config}\n    />\n  )\n}",__scope:(S={props:x,DefaultLayout:c.a,Playground:i.c,MUIEditor:b.d,MUIEditorState:b.c,toolbarControlTypes:b.f,LANG_PREFIX:b.b},S.DefaultLayout=c.a,S._frontmatter=s,S),mdxType:"Playground"},(function(){var t={toolbar:{controlsConfig:{fontFamily:{options:["default","Arial","Tahoma","Times New Roman","Impact"]}}}},e=r.useState(b.c.createEmpty(t)),o=e[0],n=e[1];return Object(l.b)(b.d,{editorState:o,onChange:function(t){n(t)},config:t,mdxType:"MUIEditor"})})),Object(l.b)("p",null,"You can edit the code above and try other font families."))}void 0!==p&&p&&p===Object(p)&&Object.isExtensible(p)&&!p.hasOwnProperty("__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docs/configuration/toolbar.mdx"}}),p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docs-configuration-toolbar-mdx-bde5b1d2dea71d31d1bc.js.map