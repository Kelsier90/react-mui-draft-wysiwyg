{"expireTime":9007200854582776000,"key":"gatsby-plugin-mdx-entire-payload-fd66caa2a77fc8b2564e4c6f1f1163a6-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"D:/Documents/React Projects/components/react-mui-draft-wysiwyg/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":141,"offset":142},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":144},"end":{"line":5,"column":29,"offset":172},"indent":[]}},{"type":"import","value":"import { Playground } from \"docz\";\nimport MUIEditor,  { MUIEditorState, toHTML } from \"../../src\";","position":{"start":{"line":7,"column":1,"offset":174},"end":{"line":8,"column":64,"offset":272},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"HTML","position":{"start":{"line":10,"column":3,"offset":276},"end":{"line":10,"column":7,"offset":280},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":274},"end":{"line":10,"column":7,"offset":280},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can convert the editor state content to ","position":{"start":{"line":12,"column":1,"offset":282},"end":{"line":12,"column":45,"offset":326},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"HTML","position":{"start":{"line":12,"column":46,"offset":327},"end":{"line":12,"column":50,"offset":331},"indent":[]}}],"position":{"start":{"line":12,"column":45,"offset":326},"end":{"line":12,"column":51,"offset":332},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":12,"column":51,"offset":332},"end":{"line":12,"column":52,"offset":333},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":282},"end":{"line":12,"column":52,"offset":333},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"toHTML","position":{"start":{"line":14,"column":4,"offset":338},"end":{"line":14,"column":10,"offset":344},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":335},"end":{"line":14,"column":10,"offset":344},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Its possible thanks to ","position":{"start":{"line":16,"column":1,"offset":346},"end":{"line":16,"column":24,"offset":369},"indent":[]}},{"type":"inlineCode","value":"toHTML","position":{"start":{"line":16,"column":24,"offset":369},"end":{"line":16,"column":32,"offset":377},"indent":[]}},{"type":"text","value":" function, that converts the content of the editor state to ","position":{"start":{"line":16,"column":32,"offset":377},"end":{"line":16,"column":92,"offset":437},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"HTML","position":{"start":{"line":16,"column":93,"offset":438},"end":{"line":16,"column":97,"offset":442},"indent":[]}}],"position":{"start":{"line":16,"column":92,"offset":437},"end":{"line":16,"column":98,"offset":443},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":16,"column":98,"offset":443},"end":{"line":16,"column":99,"offset":444},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":346},"end":{"line":16,"column":99,"offset":444},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Let's see how to do it.","position":{"start":{"line":18,"column":1,"offset":446},"end":{"line":18,"column":24,"offset":469},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":446},"end":{"line":18,"column":24,"offset":469},"indent":[]}},{"type":"jsx","value":"<Playground>\n  {() => {\n    const editorConfig = {}\n    const [editorState, setEditorState] = React.useState(MUIEditorState.createEmpty(editorConfig))\n    const [html, setHtml] = React.useState('');\n    const onChange = (newState) => {\n      setEditorState(newState)\n    }\n    const convertToHTML = () => {\n      const stateHtml = toHTML(editorState.getCurrentContent());\n      setHtml(stateHtml);\n    }\n    return (\n      <>\n        <MUIEditor\n          editorState={editorState}\n          onChange={onChange}\n          config={editorConfig} />\n        <button onClick={convertToHTML}>To HTML</button>\n        <div>{html}</div>\n      </>\n    )\n  }}\n</Playground>","position":{"start":{"line":20,"column":1,"offset":471},"end":{"line":43,"column":14,"offset":1134},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":46,"column":1,"offset":1137},"end":{"line":46,"column":31,"offset":1167},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":46,"column":31,"offset":1167}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"D:/Documents/React Projects/components/react-mui-draft-wysiwyg/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nimport { Playground } from \"docz\";\nimport MUIEditor,  { MUIEditorState, toHTML } from \"../../src\";\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"html\"\n    }}>{`HTML`}</h1>\n    <p>{`You can convert the editor state content to `}<em parentName=\"p\">{`HTML`}</em>{`.`}</p>\n    <h2 {...{\n      \"id\": \"tohtml\"\n    }}>{`toHTML`}</h2>\n    <p>{`Its possible thanks to `}<inlineCode parentName=\"p\">{`toHTML`}</inlineCode>{` function, that converts the content of the editor state to `}<em parentName=\"p\">{`HTML`}</em>{`.`}</p>\n    <p>{`Let's see how to do it.`}</p>\n    <Playground __position={0} __code={'() => {\\n  const editorConfig = {}\\n  const [editorState, setEditorState] = React.useState(\\n    MUIEditorState.createEmpty(editorConfig),\\n  )\\n  const [html, setHtml] = React.useState(\\'\\')\\n  const onChange = newState => {\\n    setEditorState(newState)\\n  }\\n  const convertToHTML = () => {\\n    const stateHtml = toHTML(editorState.getCurrentContent())\\n    setHtml(stateHtml)\\n  }\\n  return (\\n    <>\\n      <MUIEditor\\n        editorState={editorState}\\n        onChange={onChange}\\n        config={editorConfig}\\n      />\\n      <button onClick={convertToHTML}>To HTML</button>\\n      <div>{html}</div>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      MUIEditor,\n      MUIEditorState,\n      toHTML,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const editorConfig = {};\n        const [editorState, setEditorState] = React.useState(MUIEditorState.createEmpty(editorConfig));\n        const [html, setHtml] = React.useState('');\n\n        const onChange = newState => {\n          setEditorState(newState);\n        };\n\n        const convertToHTML = () => {\n          const stateHtml = toHTML(editorState.getCurrentContent());\n          setHtml(stateHtml);\n        };\n\n        return <>\n        <MUIEditor editorState={editorState} onChange={onChange} config={editorConfig} mdxType=\"MUIEditor\" />\n        <button onClick={convertToHTML}>To HTML</button>\n        <div>{html}</div>\n      </>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}