{"expireTime":9007200854582776000,"key":"gatsby-plugin-mdx-entire-payload-071a162a4654a3f851cc86296677e3dd-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"D:/Documents/React Projects/components/react-mui-draft-wysiwyg/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":141,"offset":142},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":144},"end":{"line":5,"column":29,"offset":172},"indent":[]}},{"type":"import","value":"import { Playground } from \"docz\";\nimport MUIEditor, { MUIEditorState } from \"../../src\";","position":{"start":{"line":8,"column":1,"offset":175},"end":{"line":9,"column":55,"offset":264},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"editor","position":{"start":{"line":11,"column":3,"offset":268},"end":{"line":11,"column":9,"offset":274},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":266},"end":{"line":11,"column":9,"offset":274},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The editor options only affect the part where the user types, the editor.","position":{"start":{"line":13,"column":1,"offset":276},"end":{"line":13,"column":74,"offset":349},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":276},"end":{"line":13,"column":74,"offset":349},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"editor.wrapperElement","position":{"start":{"line":15,"column":4,"offset":354},"end":{"line":15,"column":25,"offset":375},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":351},"end":{"line":15,"column":25,"offset":375},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"It is the component that wraps the editor (excluding the toolbar).\nBy default, is the ","position":{"start":{"line":17,"column":1,"offset":377},"end":{"line":18,"column":20,"offset":463},"indent":[1]}},{"type":"link","title":null,"url":"https://material-ui.com/components/paper/","children":[{"type":"inlineCode","value":"Paper","position":{"start":{"line":18,"column":21,"offset":464},"end":{"line":18,"column":28,"offset":471},"indent":[]}}],"position":{"start":{"line":18,"column":20,"offset":463},"end":{"line":18,"column":72,"offset":515},"indent":[]}},{"type":"text","value":" component from ","position":{"start":{"line":18,"column":72,"offset":515},"end":{"line":18,"column":88,"offset":531},"indent":[]}},{"type":"link","title":null,"url":"https://material-ui.com/","children":[{"type":"text","value":"Material UI","position":{"start":{"line":18,"column":89,"offset":532},"end":{"line":18,"column":100,"offset":543},"indent":[]}}],"position":{"start":{"line":18,"column":88,"offset":531},"end":{"line":18,"column":127,"offset":570},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":18,"column":127,"offset":570},"end":{"line":18,"column":128,"offset":571},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":377},"end":{"line":18,"column":128,"offset":571},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"You can pass a ","position":{"start":{"line":20,"column":1,"offset":573},"end":{"line":20,"column":16,"offset":588},"indent":[]}},{"type":"inlineCode","value":"string","position":{"start":{"line":20,"column":16,"offset":588},"end":{"line":20,"column":24,"offset":596},"indent":[]}},{"type":"text","value":" (for example: ","position":{"start":{"line":20,"column":24,"offset":596},"end":{"line":20,"column":39,"offset":611},"indent":[]}},{"type":"inlineCode","value":"'div'","position":{"start":{"line":20,"column":39,"offset":611},"end":{"line":20,"column":46,"offset":618},"indent":[]}},{"type":"text","value":") or a component.","position":{"start":{"line":20,"column":46,"offset":618},"end":{"line":20,"column":63,"offset":635},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":573},"end":{"line":20,"column":63,"offset":635},"indent":[]}},{"type":"jsx","value":"<Playground>\n  {() => {\n    const config = {\n      editor: {\n        wrapperElement: 'div',\n      }\n    };\n    const [editorState, setEditorState] = React.useState(MUIEditorState.createEmpty(config))\n    const onChange = (newState) => {\n      setEditorState(newState)\n    }\n    return (<MUIEditor editorState={editorState} onChange={onChange} config={config} />)\n  }}\n</Playground>","position":{"start":{"line":22,"column":1,"offset":637},"end":{"line":35,"column":14,"offset":1018},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"You can edit the code above and try other wrappers.","position":{"start":{"line":37,"column":1,"offset":1020},"end":{"line":37,"column":52,"offset":1071},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":1020},"end":{"line":37,"column":52,"offset":1071},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"editor.className","position":{"start":{"line":39,"column":4,"offset":1076},"end":{"line":39,"column":20,"offset":1092},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":1073},"end":{"line":39,"column":20,"offset":1092},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"It is the ","position":{"start":{"line":41,"column":1,"offset":1094},"end":{"line":41,"column":11,"offset":1104},"indent":[]}},{"type":"inlineCode","value":"className","position":{"start":{"line":41,"column":11,"offset":1104},"end":{"line":41,"column":22,"offset":1115},"indent":[]}},{"type":"text","value":" for the editor.","position":{"start":{"line":41,"column":22,"offset":1115},"end":{"line":41,"column":38,"offset":1131},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":1094},"end":{"line":41,"column":38,"offset":1131},"indent":[]}},{"type":"jsx","value":"<Playground>\n  {() => {\n    const config = {\n      editor: {\n        className: 'my-class-name',\n      }\n    };\n    const [editorState, setEditorState] = React.useState(MUIEditorState.createEmpty(config))\n    const onChange = (newState) => {\n      setEditorState(newState)\n    }\n    return (<MUIEditor editorState={editorState} onChange={onChange} config={config} />)\n  }}\n</Playground>","position":{"start":{"line":43,"column":1,"offset":1133},"end":{"line":56,"column":14,"offset":1519},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"editor.style","position":{"start":{"line":58,"column":4,"offset":1524},"end":{"line":58,"column":16,"offset":1536},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":1521},"end":{"line":58,"column":16,"offset":1536},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"It is the ","position":{"start":{"line":60,"column":1,"offset":1538},"end":{"line":60,"column":11,"offset":1548},"indent":[]}},{"type":"inlineCode","value":"style","position":{"start":{"line":60,"column":11,"offset":1548},"end":{"line":60,"column":18,"offset":1555},"indent":[]}},{"type":"text","value":" for the editor.","position":{"start":{"line":60,"column":18,"offset":1555},"end":{"line":60,"column":34,"offset":1571},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":1538},"end":{"line":60,"column":34,"offset":1571},"indent":[]}},{"type":"jsx","value":"<Playground>\n  {() => {\n    const config = {\n      editor: {\n        style: {\n          border: '1px solid gray',\n          backgroundColor: '#a7a460'\n        },\n      }\n    };\n    const [editorState, setEditorState] = React.useState(MUIEditorState.createEmpty(config))\n    const onChange = (newState) => {\n      setEditorState(newState)\n    }\n    return (<MUIEditor editorState={editorState} onChange={onChange} config={config} />)\n  }}\n</Playground>","position":{"start":{"line":62,"column":1,"offset":1573},"end":{"line":78,"column":14,"offset":2024},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"You can edit the code above and try other styles.","position":{"start":{"line":80,"column":1,"offset":2026},"end":{"line":80,"column":50,"offset":2075},"indent":[]}}],"position":{"start":{"line":80,"column":1,"offset":2026},"end":{"line":80,"column":50,"offset":2075},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":83,"column":1,"offset":2078},"end":{"line":83,"column":31,"offset":2108},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":83,"column":31,"offset":2108}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"D:/Documents/React Projects/components/react-mui-draft-wysiwyg/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nimport { Playground } from \"docz\";\nimport MUIEditor, { MUIEditorState } from \"../../src\";\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"editor\"\n    }}>{`editor`}</h1>\n    <p>{`The editor options only affect the part where the user types, the editor.`}</p>\n    <h2 {...{\n      \"id\": \"editorwrapperelement\"\n    }}>{`editor.wrapperElement`}</h2>\n    <p>{`It is the component that wraps the editor (excluding the toolbar).\nBy default, is the `}<a parentName=\"p\" {...{\n        \"href\": \"https://material-ui.com/components/paper/\"\n      }}><inlineCode parentName=\"a\">{`Paper`}</inlineCode></a>{` component from `}<a parentName=\"p\" {...{\n        \"href\": \"https://material-ui.com/\"\n      }}>{`Material UI`}</a>{`.`}</p>\n    <p>{`You can pass a `}<inlineCode parentName=\"p\">{`string`}</inlineCode>{` (for example: `}<inlineCode parentName=\"p\">{`'div'`}</inlineCode>{`) or a component.`}</p>\n    <Playground __position={0} __code={'() => {\\n  const config = {\\n    editor: {\\n      wrapperElement: \\'div\\',\\n    },\\n  }\\n  const [editorState, setEditorState] = React.useState(\\n    MUIEditorState.createEmpty(config),\\n  )\\n  const onChange = newState => {\\n    setEditorState(newState)\\n  }\\n  return (\\n    <MUIEditor\\n      editorState={editorState}\\n      onChange={onChange}\\n      config={config}\\n    />\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      MUIEditor,\n      MUIEditorState,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const config = {\n          editor: {\n            wrapperElement: 'div'\n          }\n        };\n        const [editorState, setEditorState] = React.useState(MUIEditorState.createEmpty(config));\n\n        const onChange = newState => {\n          setEditorState(newState);\n        };\n\n        return <MUIEditor editorState={editorState} onChange={onChange} config={config} mdxType=\"MUIEditor\" />;\n      }}\n    </Playground>\n    <p>{`You can edit the code above and try other wrappers.`}</p>\n    <h2 {...{\n      \"id\": \"editorclassname\"\n    }}>{`editor.className`}</h2>\n    <p>{`It is the `}<inlineCode parentName=\"p\">{`className`}</inlineCode>{` for the editor.`}</p>\n    <Playground __position={1} __code={'() => {\\n  const config = {\\n    editor: {\\n      className: \\'my-class-name\\',\\n    },\\n  }\\n  const [editorState, setEditorState] = React.useState(\\n    MUIEditorState.createEmpty(config),\\n  )\\n  const onChange = newState => {\\n    setEditorState(newState)\\n  }\\n  return (\\n    <MUIEditor\\n      editorState={editorState}\\n      onChange={onChange}\\n      config={config}\\n    />\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      MUIEditor,\n      MUIEditorState,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const config = {\n          editor: {\n            className: 'my-class-name'\n          }\n        };\n        const [editorState, setEditorState] = React.useState(MUIEditorState.createEmpty(config));\n\n        const onChange = newState => {\n          setEditorState(newState);\n        };\n\n        return <MUIEditor editorState={editorState} onChange={onChange} config={config} mdxType=\"MUIEditor\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"editorstyle\"\n    }}>{`editor.style`}</h2>\n    <p>{`It is the `}<inlineCode parentName=\"p\">{`style`}</inlineCode>{` for the editor.`}</p>\n    <Playground __position={2} __code={'() => {\\n  const config = {\\n    editor: {\\n      style: {\\n        border: \\'1px solid gray\\',\\n        backgroundColor: \\'#a7a460\\',\\n      },\\n    },\\n  }\\n  const [editorState, setEditorState] = React.useState(\\n    MUIEditorState.createEmpty(config),\\n  )\\n  const onChange = newState => {\\n    setEditorState(newState)\\n  }\\n  return (\\n    <MUIEditor\\n      editorState={editorState}\\n      onChange={onChange}\\n      config={config}\\n    />\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      MUIEditor,\n      MUIEditorState,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const config = {\n          editor: {\n            style: {\n              border: '1px solid gray',\n              backgroundColor: '#a7a460'\n            }\n          }\n        };\n        const [editorState, setEditorState] = React.useState(MUIEditorState.createEmpty(config));\n\n        const onChange = newState => {\n          setEditorState(newState);\n        };\n\n        return <MUIEditor editorState={editorState} onChange={onChange} config={config} mdxType=\"MUIEditor\" />;\n      }}\n    </Playground>\n    <p>{`You can edit the code above and try other styles.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}