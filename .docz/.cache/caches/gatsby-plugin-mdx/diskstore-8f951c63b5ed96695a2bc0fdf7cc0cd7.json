{"expireTime":9007200854582776000,"key":"gatsby-plugin-mdx-entire-payload-720829a0308dd9032469db6441dc90ec-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"D:/Documents/React Projects/components/react-mui-draft-wysiwyg/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":141,"offset":142},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":144},"end":{"line":5,"column":29,"offset":172},"indent":[]}},{"type":"import","value":"import MUIEditor, { MUIEditorState } from \"../../src\";\nimport { convertToRaw } from 'draft-js';\nimport { Playground } from \"docz\";","position":{"start":{"line":8,"column":1,"offset":175},"end":{"line":10,"column":35,"offset":305},"indent":[1,1]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"This example shows how to save the editor content for example to a server.","position":{"start":{"line":12,"column":3,"offset":309},"end":{"line":12,"column":77,"offset":383},"indent":[]}}],"position":{"start":{"line":12,"column":3,"offset":309},"end":{"line":12,"column":77,"offset":383},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":307},"end":{"line":12,"column":77,"offset":383},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Imports","position":{"start":{"line":14,"column":4,"offset":388},"end":{"line":14,"column":11,"offset":395},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":385},"end":{"line":14,"column":11,"offset":395},"indent":[]}},{"type":"code","lang":"bash","meta":null,"value":"import MUIEditor, { MUIEditorState } from \"react-mui-draft-wysiwyg\";\nimport { convertToRaw } from 'draft-js';","position":{"start":{"line":16,"column":1,"offset":397},"end":{"line":19,"column":4,"offset":518},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"More info for ","position":{"start":{"line":21,"column":1,"offset":520},"end":{"line":21,"column":15,"offset":534},"indent":[]}},{"type":"inlineCode","value":"convertToRaw","position":{"start":{"line":21,"column":15,"offset":534},"end":{"line":21,"column":29,"offset":548},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":21,"column":29,"offset":548},"end":{"line":21,"column":30,"offset":549},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":520},"end":{"line":21,"column":30,"offset":549},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://draftjs.org/docs/api-reference-data-conversion/#converttoraw","children":[{"type":"text","value":"https://draftjs.org/docs/api-reference-data-conversion/#converttoraw","position":{"start":{"line":23,"column":1,"offset":551},"end":{"line":23,"column":69,"offset":619},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":551},"end":{"line":23,"column":69,"offset":619},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":551},"end":{"line":23,"column":69,"offset":619},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Playground","position":{"start":{"line":25,"column":4,"offset":624},"end":{"line":25,"column":14,"offset":634},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":621},"end":{"line":25,"column":14,"offset":634},"indent":[]}},{"type":"jsx","value":"<Playground>\n  {() => {\n    const editorConfig = {}\n    const [editorState, setEditorState] = React.useState(MUIEditorState.createEmpty(editorConfig));\n    const onChange = (newState) => {\n      setEditorState(newState)\n    }\n    const save = () => {\n      const rawContent = convertToRaw(editorState.getCurrentContent());\n      // Here you can send the rawContent object to a server or whatever you want\n      console.log(rawContent);\n      alert('Saved');\n    };\n    return (\n      <>\n        <MUIEditor editorState={editorState} onChange={onChange} config={editorConfig} />\n        <button onClick={save} type=\"button\">Save</button>\n      </>\n    )\n  }}\n</Playground>","position":{"start":{"line":27,"column":1,"offset":636},"end":{"line":47,"column":14,"offset":1306},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":50,"column":1,"offset":1309},"end":{"line":50,"column":31,"offset":1339},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":50,"column":31,"offset":1339}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"D:/Documents/React Projects/components/react-mui-draft-wysiwyg/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nimport MUIEditor, { MUIEditorState } from \"../../src\";\nimport { convertToRaw } from 'draft-js';\nimport { Playground } from \"docz\";\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <blockquote>\n      <p parentName=\"blockquote\">{`This example shows how to save the editor content for example to a server.`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"imports\"\n    }}>{`Imports`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`import MUIEditor, { MUIEditorState } from \"react-mui-draft-wysiwyg\";\nimport { convertToRaw } from 'draft-js';\n`}</code></pre>\n    <p>{`More info for `}<inlineCode parentName=\"p\">{`convertToRaw`}</inlineCode>{`:`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://draftjs.org/docs/api-reference-data-conversion/#converttoraw\"\n      }}>{`https://draftjs.org/docs/api-reference-data-conversion/#converttoraw`}</a></p>\n    <h2 {...{\n      \"id\": \"playground\"\n    }}>{`Playground`}</h2>\n    <Playground __position={0} __code={'() => {\\n  const editorConfig = {}\\n  const [editorState, setEditorState] = React.useState(\\n    MUIEditorState.createEmpty(editorConfig),\\n  )\\n  const onChange = newState => {\\n    setEditorState(newState)\\n  }\\n  const save = () => {\\n    const rawContent = convertToRaw(editorState.getCurrentContent())\\n    // Here you can send the rawContent object to a server or whatever you want\\n    console.log(rawContent)\\n    alert(\\'Saved\\')\\n  }\\n  return (\\n    <>\\n      <MUIEditor\\n        editorState={editorState}\\n        onChange={onChange}\\n        config={editorConfig}\\n      />\\n      <button onClick={save} type=\\\"button\\\">\\n        Save\\n      </button>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      MUIEditor,\n      MUIEditorState,\n      convertToRaw,\n      Playground,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const editorConfig = {};\n        const [editorState, setEditorState] = React.useState(MUIEditorState.createEmpty(editorConfig));\n\n        const onChange = newState => {\n          setEditorState(newState);\n        };\n\n        const save = () => {\n          const rawContent = convertToRaw(editorState.getCurrentContent()); // Here you can send the rawContent object to a server or whatever you want\n\n          console.log(rawContent);\n          alert('Saved');\n        };\n\n        return <>\n        <MUIEditor editorState={editorState} onChange={onChange} config={editorConfig} mdxType=\"MUIEditor\" />\n        <button onClick={save} type=\"button\">Save</button>\n      </>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}