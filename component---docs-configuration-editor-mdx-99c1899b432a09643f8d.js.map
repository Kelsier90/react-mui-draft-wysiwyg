{"version":3,"sources":["webpack:///../docs/configuration/editor.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","MUIEditor","MUIEditorState","config","editor","wrapperElement","React","createEmpty","editorState","setEditorState","onChange","newState","className","style","border","backgroundColor","isMDXComponent"],"mappings":"iRAQaA,G,UAAe,S,+MAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,UAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,UADR,UAGA,kGACA,iBAAQ,CACN,GAAM,wBADR,yBAGA,+GACiB,6BAAGC,WAAW,KAAQ,CACnC,KAAQ,8CACP,0BAAYA,WAAW,KAAvB,UAHL,mBAG8E,6BAAGA,WAAW,KAAQ,CAChG,KAAQ,6BADkE,eAH9E,KAMA,uCAAsB,0BAAYA,WAAW,KAAvB,UAAtB,kBAA2F,0BAAYA,WAAW,KAAvB,SAA3F,qBACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,mYAAsYC,SAAO,GAC9aL,QACAH,kBACAS,eACAC,cACAC,oBAL8a,gBAM9aX,IAN8a,EAO9aH,eAP8a,GAQ7aO,QAAQ,eACZ,WACK,IAAMQ,EAAS,CACbC,OAAQ,CACNC,eAAgB,QAHnB,EAMqCC,WAAeJ,IAAeK,YAAYJ,IAAzEK,EANN,KAMmBC,EANnB,KAYD,OAAO,YAAC,IAAD,CAAWD,YAAaA,EAAaE,SAJ3B,SAAAC,GACfF,EAAeE,IAG+CR,OAAQA,EAAQR,QAAQ,iBAG5F,4EACA,iBAAQ,CACN,GAAM,mBADR,oBAGA,kCAAiB,0BAAYC,WAAW,KAAvB,aAAjB,oBACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,wYAA2YC,SAAO,GACnbL,QACAH,kBACAS,eACAC,cACAC,oBALmb,gBAMnbX,IANmb,EAOnbH,eAPmb,GAQlbO,QAAQ,eACZ,WACK,IAAMQ,EAAS,CACbC,OAAQ,CACNQ,UAAW,kBAHd,EAMqCN,WAAeJ,IAAeK,YAAYJ,IAAzEK,EANN,KAMmBC,EANnB,KAYD,OAAO,YAAC,IAAD,CAAWD,YAAaA,EAAaE,SAJ3B,SAAAC,GACfF,EAAeE,IAG+CR,OAAQA,EAAQR,QAAQ,iBAG5F,iBAAQ,CACN,GAAM,eADR,gBAGA,kCAAiB,0BAAYC,WAAW,KAAvB,SAAjB,oBACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,ucAA4cC,SAAO,GACpfL,QACAH,kBACAS,eACAC,cACAC,oBALof,gBAMpfX,IANof,EAOpfH,eAPof,GAQnfO,QAAQ,eACZ,WACK,IAAMQ,EAAS,CACbC,OAAQ,CACNS,MAAO,CACLC,OAAQ,iBACRC,gBAAiB,aALtB,EASqCT,WAAeJ,IAAeK,YAAYJ,IAAzEK,EATN,KASmBC,EATnB,KAeD,OAAO,YAAC,IAAD,CAAWD,YAAaA,EAAaE,SAJ3B,SAAAC,GACfF,EAAeE,IAG+CR,OAAQA,EAAQR,QAAQ,iBAG5F,gF,6MAKJH,EAAWwB,gBAAiB","file":"component---docs-configuration-editor-mdx-99c1899b432a09643f8d.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"D:/Documents/React Projects/components/react-mui-draft-wysiwyg/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from \"docz\";\nimport MUIEditor, { MUIEditorState } from \"../../src\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"editor\"\n    }}>{`editor`}</h1>\n    <p>{`The editor options only affect the part where the user types, the editor.`}</p>\n    <h2 {...{\n      \"id\": \"editorwrapperelement\"\n    }}>{`editor.wrapperElement`}</h2>\n    <p>{`It is the component that wraps the editor (excluding the toolbar).\nBy default, is the `}<a parentName=\"p\" {...{\n        \"href\": \"https://material-ui.com/components/paper/\"\n      }}><inlineCode parentName=\"a\">{`Paper`}</inlineCode></a>{` component from `}<a parentName=\"p\" {...{\n        \"href\": \"https://material-ui.com/\"\n      }}>{`Material UI`}</a>{`.`}</p>\n    <p>{`You can pass a `}<inlineCode parentName=\"p\">{`string`}</inlineCode>{` (for example: `}<inlineCode parentName=\"p\">{`'div'`}</inlineCode>{`) or a component.`}</p>\n    <Playground __position={0} __code={'() => {\\n  const config = {\\n    editor: {\\n      wrapperElement: \\'div\\',\\n    },\\n  }\\n  const [editorState, setEditorState] = React.useState(\\n    MUIEditorState.createEmpty(config),\\n  )\\n  const onChange = newState => {\\n    setEditorState(newState)\\n  }\\n  return (\\n    <MUIEditor\\n      editorState={editorState}\\n      onChange={onChange}\\n      config={config}\\n    />\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      MUIEditor,\n      MUIEditorState,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const config = {\n          editor: {\n            wrapperElement: 'div'\n          }\n        };\n        const [editorState, setEditorState] = React.useState(MUIEditorState.createEmpty(config));\n\n        const onChange = newState => {\n          setEditorState(newState);\n        };\n\n        return <MUIEditor editorState={editorState} onChange={onChange} config={config} mdxType=\"MUIEditor\" />;\n      }}\n    </Playground>\n    <p>{`You can edit the code above and try other wrappers.`}</p>\n    <h2 {...{\n      \"id\": \"editorclassname\"\n    }}>{`editor.className`}</h2>\n    <p>{`It is the `}<inlineCode parentName=\"p\">{`className`}</inlineCode>{` for the editor.`}</p>\n    <Playground __position={1} __code={'() => {\\n  const config = {\\n    editor: {\\n      className: \\'my-class-name\\',\\n    },\\n  }\\n  const [editorState, setEditorState] = React.useState(\\n    MUIEditorState.createEmpty(config),\\n  )\\n  const onChange = newState => {\\n    setEditorState(newState)\\n  }\\n  return (\\n    <MUIEditor\\n      editorState={editorState}\\n      onChange={onChange}\\n      config={config}\\n    />\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      MUIEditor,\n      MUIEditorState,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const config = {\n          editor: {\n            className: 'my-class-name'\n          }\n        };\n        const [editorState, setEditorState] = React.useState(MUIEditorState.createEmpty(config));\n\n        const onChange = newState => {\n          setEditorState(newState);\n        };\n\n        return <MUIEditor editorState={editorState} onChange={onChange} config={config} mdxType=\"MUIEditor\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"editorstyle\"\n    }}>{`editor.style`}</h2>\n    <p>{`It is the `}<inlineCode parentName=\"p\">{`style`}</inlineCode>{` for the editor.`}</p>\n    <Playground __position={2} __code={'() => {\\n  const config = {\\n    editor: {\\n      style: {\\n        border: \\'1px solid gray\\',\\n        backgroundColor: \\'#a7a460\\',\\n      },\\n    },\\n  }\\n  const [editorState, setEditorState] = React.useState(\\n    MUIEditorState.createEmpty(config),\\n  )\\n  const onChange = newState => {\\n    setEditorState(newState)\\n  }\\n  return (\\n    <MUIEditor\\n      editorState={editorState}\\n      onChange={onChange}\\n      config={config}\\n    />\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      MUIEditor,\n      MUIEditorState,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const config = {\n          editor: {\n            style: {\n              border: '1px solid gray',\n              backgroundColor: '#a7a460'\n            }\n          }\n        };\n        const [editorState, setEditorState] = React.useState(MUIEditorState.createEmpty(config));\n\n        const onChange = newState => {\n          setEditorState(newState);\n        };\n\n        return <MUIEditor editorState={editorState} onChange={onChange} config={config} mdxType=\"MUIEditor\" />;\n      }}\n    </Playground>\n    <p>{`You can edit the code above and try other styles.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}